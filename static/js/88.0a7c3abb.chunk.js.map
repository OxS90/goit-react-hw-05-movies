{"version":3,"file":"static/js/88.0a7c3abb.chunk.js","mappings":"4PACA,EAAwC,4CAAxC,EAA6F,6BAA7F,EAAoI,8BAApI,EAAmL,qC,kBC4EnL,EAvEqB,WACnB,IAAAA,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC5BI,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACmB,SAAAC,IAa1B,OAb0BA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAA3B,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEuBC,EAAAA,EAAAA,IAAkBX,GAAS,KAAD,EACpB,QADnBO,EAAIC,EAAAI,MACDC,YACPN,EAAKM,YAAc,gDAEnBN,EAAKM,YACH,sCAAwCN,EAAKM,YAEjDd,EAAgBQ,GAAMC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEtBO,QAAQC,MAAM,SAAQR,EAAAM,IAAS,yBAAAN,EAAAS,OAAA,GAAAX,EAAA,mBAElCY,MAAA,KAAAC,UAAA,EAdc,WACYhB,EAAAe,MAAC,KAADC,UAAA,CAc3BC,EACF,GAAG,CAACpB,IAECF,GAIHuB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAA6BC,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,OACEH,UAAWC,EACXG,IAAK5B,EAAae,YAClBc,IAAK7B,EAAa8B,WAGtBP,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeC,SAAA,EAC7BH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,CACG1B,EAAa8B,OACdH,EAAAA,EAAAA,KAAA,SAAS,IAAE3B,EAAa+B,aAAaC,UAAU,EAAG,GAAG,QAEvDT,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAG,eAAaO,KAAKC,MAAkC,GAA5BlC,EAAamC,cAAmB,QAC3DR,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAI1B,EAAaoC,YACjBT,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAI1B,EAAaqC,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IAAEC,KAAK,WAExDlB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAsBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2BACJH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,GAAG,OAAMjB,SAAC,UAChBC,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,GAAG,UAASjB,SAAC,mBAGvBC,EAAAA,EAAAA,KAACiB,EAAAA,GAAM,QA7BFjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAQ,GAgCpB,C","sources":["webpack://react-homework-template/./src/components/pages/movies/MovieDetails.module.css?d8d2","components/pages/movies/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieDetailsContainer\":\"MovieDetails_movieDetailsContainer__gWZ1S\",\"poster\":\"MovieDetails_poster__lNtTo\",\"details\":\"MovieDetails_details__xqjk8\",\"additionalInfo\":\"MovieDetails_additionalInfo__PaPWw\"};","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { Link, Outlet, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../TheMovieDatabaseAPI';\nimport styles from './MovieDetails.module.css';\nimport NotFound from '../NotFound';\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchDetails() {\n      try {\n        const data = await fetchMovieDetails(movieId);\n        if (data.poster_path === null) {\n          data.poster_path = 'https://source.unsplash.com/500x750/?no-photo';\n        } else {\n          data.poster_path =\n            'https://www.themoviedb.org/t/p/w500' + data.poster_path;\n        }\n        setMovieDetails(data);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n    fetchDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <NotFound />;\n  }\n  return (\n    <div className={styles.movieDetailsContainer}>\n      <div>\n        <img\n          className={styles.poster}\n          src={movieDetails.poster_path}\n          alt={movieDetails.title}\n        />\n      </div>\n      <div className={styles.details}>\n        <h1>\n          {movieDetails.title}\n          <br></br>({movieDetails.release_date.substring(0, 4)})\n        </h1>\n        <p>User score: {Math.round(movieDetails.vote_average * 10)}%</p>\n        <h2>Overview</h2>\n        <p>{movieDetails.overview}</p>\n        <h2>Genres</h2>\n        <p>{movieDetails.genres.map(genre => genre.name).join(' ')}</p>\n      </div>\n      <div className={styles.additionalInfo}>\n        <h3>Aditional information</h3>\n        <div>\n          <Link to=\"cast\">Cast</Link>\n          <Link to=\"reviews\">Reviews</Link>\n        </div>\n      </div>\n      <Outlet />\n    </div>\n  );\n};\nMovieDetails.propTypes = {\n  movieDetails: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    release_date: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n  }),\n};\n\nexport default MovieDetails;\n"],"names":["_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","movieId","useParams","useEffect","_fetchDetails","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchMovieDetails","sent","poster_path","t0","console","error","stop","apply","arguments","fetchDetails","_jsxs","className","styles","children","_jsx","src","alt","title","release_date","substring","Math","round","vote_average","overview","genres","map","genre","name","join","Link","to","Outlet","NotFound"],"sourceRoot":""}