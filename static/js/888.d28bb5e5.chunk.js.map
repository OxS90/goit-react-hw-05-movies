{"version":3,"file":"static/js/888.d28bb5e5.chunk.js","mappings":"wQACA,EAA4B,wBAA5B,EAAiE,yBAAjE,EAAyG,2BAAzG,EAAgJ,wBAAhJ,EAAyL,6B,SC4DzL,EAvDa,WACX,IAAAA,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAClBG,GAAYC,EAAAA,EAAAA,MAAZD,QAwBR,OAtBAE,EAAAA,EAAAA,YAAU,WACgB,SAAAC,IAgBvB,OAhBuBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAxB,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEqB,OAFrBF,EAAAC,KAAA,EAEIX,GAAW,GAAMU,EAAAE,KAAA,GACMC,EAAAA,EAAAA,IAAeZ,GAAS,KAAD,EAAxCO,EAAQE,EAAAI,KACRL,EAAkBD,EAASO,KAAKC,KAAI,SAAAC,GAAK,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC1CD,GAAK,IACRE,aAAcF,EAAME,aAAY,mCAAAC,OACOH,EAAME,cACzC,iDAA+C,IAErDvB,EAAWa,GAAiBC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,SAE5BY,QAAQC,MAAM,uBAAsBb,EAAAW,IAAS,QAE3B,OAF2BX,EAAAC,KAAA,GAE7CX,GAAW,GAAOU,EAAAc,OAAA,6BAAAd,EAAAe,OAAA,GAAAlB,EAAA,yBAErBmB,MAAA,KAAAC,UAAA,CACI1B,GAlBU,WACSG,EAAAsB,MAAC,KAADC,UAAA,CAkBxBC,EACF,GAAG,CAAC3B,KAGF4B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACG/B,IAAWgC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IAClBrC,EAAQsC,OAAS,EAChBtC,EAAQqB,KAAI,SAAAkB,GAA4C,IAAzCf,EAAYe,EAAZf,aAAcgB,EAAID,EAAJC,KAAMC,EAASF,EAATE,UAAWC,EAAEH,EAAFG,GAC5C,OACER,EAAAA,EAAAA,MAAA,OAAcS,UAAWC,EAAiBT,SAAA,EACxCC,EAAAA,EAAAA,KAAA,OACES,IAAKrB,EACLsB,IAAKN,EACLG,UAAWC,KAEbV,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAoBT,SAAA,EAClCC,EAAAA,EAAAA,KAAA,QAAMO,UAAWC,EAAiBT,SAAEK,KACpCN,EAAAA,EAAAA,MAAA,QAAMS,UAAWC,EAAsBT,SAAA,CAAC,cAC1BM,UATRC,EAcd,KAEAN,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2DAIX,C","sources":["webpack://react-homework-template/./src/components/pages/movies/Cast.module.css?174e","components/pages/movies/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast_item\":\"Cast_cast_item__t5OGp\",\"cast_image\":\"Cast_cast_image__KxuLL\",\"cast_details\":\"Cast_cast_details__lJbks\",\"cast_name\":\"Cast_cast_name__+oTM0\",\"cast_character\":\"Cast_cast_character__Yu63h\"};","import { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../../TheMovieDatabaseAPI';\nimport { useEffect, useState } from 'react';\nimport Loader from '../../Loader/Loader';\nimport styles from './Cast.module.css';\n\nconst Cast = () => {\n  const [credits, setCredits] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchCast() {\n      try {\n        setLoading(true);\n        const response = await fetchMovieCast(movieId);\n        const modifiedCredits = response.cast.map(actor => ({\n          ...actor,\n          profile_path: actor.profile_path\n            ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n            : 'https://source.unsplash.com/500x750/?no-photo',\n        }));\n        setCredits(modifiedCredits);\n      } catch (error) {\n        console.error('Error fetching cast:', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (!movieId) return;\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      {credits.length > 0 ? (\n        credits.map(({ profile_path, name, character, id }) => {\n          return (\n            <div key={id} className={styles.cast_item}>\n              <img\n                src={profile_path}\n                alt={name}\n                className={styles.cast_image}\n              />\n              <div className={styles.cast_details}>\n                <span className={styles.cast_name}>{name}</span>\n                <span className={styles.cast_character}>\n                  Character: {character}\n                </span>\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <i>   Sorry! There are no infos about casting.</i>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["_useState","useState","_useState2","_slicedToArray","credits","setCredits","_useState3","_useState4","loading","setLoading","movieId","useParams","useEffect","_fetchCast","_asyncToGenerator","_regeneratorRuntime","_callee","response","modifiedCredits","_context","prev","next","fetchMovieCast","sent","cast","map","actor","_objectSpread","profile_path","concat","t0","console","error","finish","stop","apply","arguments","fetchCast","_jsxs","children","_jsx","Loader","length","_ref","name","character","id","className","styles","src","alt"],"sourceRoot":""}